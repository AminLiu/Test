package com.queencastle.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.queencastle.dao.PageInfo;
import com.queencastle.dao.mapper.UserMapper;
import com.queencastle.dao.model.User;
import com.queencastle.service.interf.UserService;

@Service
public class UserServiceImpl extends BaseService implements UserService {
    @Autowired
    private UserMapper userMapper;

    @Override
    public int insert(User user) {
        return userMapper.insert(user);
    }

    @Override
    public User getById(String id) {
        return userMapper.getById(id);
    }

    @Override
    public int updateById(User user) {
        return userMapper.updateById(user);
    }

    @Override
    public PageInfo<User> getUsersByParams(int page, int rows, Map<String, Object> map) {
        PageInfo<User> pageInfo = new PageInfo<User>();
        pageInfo.setPage(page);
        Integer count = userMapper.getUsersCountByParams(map);
        if (count == null || count == 0) {
            pageInfo.setTotal(0);
            pageInfo.setRows(new ArrayList<User>());
            return pageInfo;
        }
        pageInfo.setTotal(count);
        page = (page <= 1) ? 1 : page;
        Pageable pageable = new PageRequest(page - 1, rows);

        List<User> list = userMapper.getUsersByParams(pageable, map);
        pageInfo.setRows(list);
        return pageInfo;
    }

    @Override
    public User getByUsername(String username) {
        if (StringUtils.isNoneBlank(username)) {
            return userMapper.getByUsername(username);

        }
        return null;
    }

}
