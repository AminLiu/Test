<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.queencastle.dao.mapper.UserMapper">
	<resultMap id="UserResultMap" type="com.queencastle.dao.model.User">
		<id column="id" property="id" typeHandler="idHandler" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="out_source" property="source" jdbcType="VARCHAR" />
		<result column="out_nick" property="outNick" jdbcType="VARCHAR" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updateAt" jdbcType="TIMESTAMP" />
	</resultMap>


	<sql id="Base_Column_List">
		id, phone, username, password, out_source, out_nick,
		created_at,updated_at
	</sql>

	<select id="getById" resultMap="UserResultMap">
		select
		<include refid="Base_Column_List" />
		from queen_user
		where id = #{id,typeHandler=idHandler}
	</select>


	<insert id="insert" parameterType="com.queencastle.dao.model.User">
		<selectKey resultType="long" keyProperty="idRaw">
			SELECT
			LAST_INSERT_ID() AS id
		</selectKey>
		insert into queen_user (
		phone, username, password, out_source, out_nick, created_at,updated_at
		)values
		(#{phone},#{username},#{password},#{source},#{outNick},now(),now())
	</insert>

	<update id="updateById" parameterType="com.queencastle.dao.model.User">
		update queen_user 
		<set>
		<if test="phone != null and phone !=''">
			phone=#{phone},
		</if>
		<if test="username != null and username !=''">
			username=#{username},
		</if>
		<if test="password != null and password !=''">
			password=#{password},
		</if>
		<if test="source != null and source !=''">
			out_source=#{source},
		</if>
		<if test="outNick != null and outNick !=''">
			out_nick=#{outNick},
		</if>
			updated_at=now()
		</set>
		where id = #{id,typeHandler=idHandler}
	</update>

	<select id="getUsersCountByParams" resultType="java.lang.Integer">
		select count(*) from queen_user
	</select>
	<select id="getUsersByParams" resultMap="UserResultMap">
		select
		<include refid="Base_Column_List" />
		from queen_user order by id desc
		limit #{page.offset}, #{page.size}
	</select>

	<select id="getByUsername" resultMap="UserResultMap">
		select
		<include refid="Base_Column_List" />
		from queen_user  where username=#{username}
	</select>






</mapper>