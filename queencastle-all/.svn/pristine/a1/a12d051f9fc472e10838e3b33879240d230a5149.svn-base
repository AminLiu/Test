package com.queencastle.dao.config;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import redis.clients.jedis.JedisPoolConfig;
import redis.clients.jedis.JedisShardInfo;
import redis.clients.jedis.ShardedJedisPool;

import com.queencastle.dao.utils.jedis.StringJedisCache;

@Configuration
public class JedisConfig {
    @Value("${redis.maxIdle}")
    private int redis_max_idle;
    @Value("${redis.testOnBorrow}")
    private boolean redis_testOnBorrow;
    @Value("${redis.maxWait}")
    private int redis_max_wait;

    @Value("${redis.host}")
    private String redis_host;
    @Value("${redis.port}")
    private int redis_port;
    @Value("${appName}")
    private String appName;

    @Bean
    public JedisPoolConfig jedisPoolConfig() {
        JedisPoolConfig jedisPoolConfig = new JedisPoolConfig();
        jedisPoolConfig.setTestOnBorrow(redis_testOnBorrow);
        jedisPoolConfig.setMaxIdle(redis_max_idle);
        jedisPoolConfig.setMaxWaitMillis(redis_max_wait);
        return jedisPoolConfig;
    }

    @Bean
    public JedisShardInfo jedisShardInfo() {
        JedisShardInfo jedisShardInfo = new JedisShardInfo(redis_host, redis_port);
        return jedisShardInfo;
    }

    @Bean
    public ShardedJedisPool shardedJedisPool() {
        List<JedisShardInfo> shards = new ArrayList<JedisShardInfo>();
        shards.add(jedisShardInfo());
        ShardedJedisPool shardedJedisPool = new ShardedJedisPool(jedisPoolConfig(), shards);
        return shardedJedisPool;
    }

    /******************************************************/
    @Bean(name = "sessionIdCache")
    public StringJedisCache sessionIdCache() {
        StringJedisCache sessionIdCache =
                new StringJedisCache(appName, shardedJedisPool(), 60 * 60, "userSesssion");
        return sessionIdCache;
    }

    // @Bean(name = "sessionIdCache2")
    // public StringJedisCache sessionIdCache2() {
    // StringJedisCache sessionIdCache =
    // new StringJedisCache(appName, shardedJedisPool(), 60 * 60, "userSesssion2");
    // return sessionIdCache;
    // }


}
