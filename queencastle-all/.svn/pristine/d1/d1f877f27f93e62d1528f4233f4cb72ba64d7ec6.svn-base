package com.queencastle.dao.config;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import redis.clients.jedis.JedisPoolConfig;
import redis.clients.jedis.JedisShardInfo;
import redis.clients.jedis.ShardedJedisPool;

import com.queencastle.dao.utils.jedis.ObjectJedisCache;
import com.queencastle.dao.utils.jedis.StringJedisCache;

@Configuration
public class JedisConfig {
    @Value("${redis.maxIdle}")
    private int redis_max_idle;
    @Value("${redis.testOnBorrow}")
    private boolean redis_testOnBorrow;
    @Value("${redis.maxWait}")
    private int redis_max_wait;

    @Value("${redis.host}")
    private String redis_host;
    @Value("${redis.port}")
    private int redis_port;
    @Value("${appName}")
    private String appName;

    @Bean
    public JedisPoolConfig jedisPoolConfig() {
        JedisPoolConfig jedisPoolConfig = new JedisPoolConfig();
        jedisPoolConfig.setTestOnBorrow(redis_testOnBorrow);
        jedisPoolConfig.setMaxIdle(redis_max_idle);
        jedisPoolConfig.setMaxWaitMillis(redis_max_wait);
        return jedisPoolConfig;
    }

    @Bean
    public JedisShardInfo jedisShardInfo() {
        JedisShardInfo jedisShardInfo = new JedisShardInfo(redis_host, redis_port);
        return jedisShardInfo;
    }

    @Bean
    public ShardedJedisPool shardedJedisPool() {
        List<JedisShardInfo> shards = new ArrayList<JedisShardInfo>();
        shards.add(jedisShardInfo());
        ShardedJedisPool shardedJedisPool = new ShardedJedisPool(jedisPoolConfig(), shards);
        return shardedJedisPool;
    }

    /******************************************************/
    @Bean(name = "sessionIdCache")
    public StringJedisCache sessionIdCache() {
        StringJedisCache sessionIdCache =
                new StringJedisCache(appName, shardedJedisPool(), 60 * 60 * 36,
                        "userSesssion2015110201111111");
        return sessionIdCache;
    }

    @Bean(name = "sessionContextCache")
    public ObjectJedisCache sessionContextCache() {
        ObjectJedisCache sessionIdCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 60 * 36,
                        "userSesssionContext2015110201111111");
        return sessionIdCache;
    }


    @Bean(name = "menuCache")
    public ObjectJedisCache menuCache() {
        ObjectJedisCache menuCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 10, "menuCache");
        return menuCache;
    }

    @Bean(name = "provinceCache")
    public ObjectJedisCache provinceCache() {
        ObjectJedisCache provinceCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 60 * 24, "provinceCache");
        return provinceCache;
    }

    @Bean(name = "cityCache")
    public ObjectJedisCache cityCache() {
        ObjectJedisCache cityCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 60 * 24, "cityCache");
        return cityCache;
    }

    @Bean(name = "provinceCodeCache")
    public ObjectJedisCache provinceCodeCache() {
        ObjectJedisCache provinceCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 60 * 24, "provinceCodeCache");
        return provinceCache;
    }

    @Bean(name = "cityCodeCache")
    public ObjectJedisCache cityCodeCache() {
        ObjectJedisCache cityCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 60 * 24, "cityCodeCache");
        return cityCache;
    }

    @Bean(name = "accessTokenCache")
    public StringJedisCache accessTokenCache() {
        StringJedisCache accessTokenCache =
                new StringJedisCache(appName, shardedJedisPool(), 60 * 10, "accessTokenCache2");
        return accessTokenCache;
    }


    @Bean(name = "qrcodeCache")
    public ObjectJedisCache qrcodeCache() {
        ObjectJedisCache qrcodeCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 60, "qrcodeCache111");
        return qrcodeCache;
    }



    @Bean(name = "productCache")
    public ObjectJedisCache productCache() {
        ObjectJedisCache productCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 10, "productCache");
        return productCache;
    }



    @Bean(name = "cityListCache")
    public ObjectJedisCache cityListCache() {
        ObjectJedisCache cityListCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 60 * 12, "cityListCache");
        return cityListCache;
    }

    @Bean(name = "areaListCache")
    public ObjectJedisCache areaListCache() {
        ObjectJedisCache areaListCache =
                new ObjectJedisCache(appName, shardedJedisPool(), 60 * 60 * 12, "areaListCache");
        return areaListCache;
    }



}
